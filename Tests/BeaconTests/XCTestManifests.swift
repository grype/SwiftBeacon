#if !canImport(ObjectiveC)
import XCTest

extension BeaconTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BeaconTest = [
        ("testAggregationOfArraysOfBeacons", testAggregationOfArraysOfBeacons),
        ("testAggregationOfSingles", testAggregationOfSingles),
        ("testMixedAggregation", testMixedAggregation),
        ("testSignaling", testSignaling),
        ("testSignalingWhileFiltering", testSignalingWhileFiltering),
        ("testSignalingWhileStopped", testSignalingWhileStopped),
    ]
}

extension IntervalLoggerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IntervalLoggerTests = [
        ("testInit", testInit),
        ("testNextPutWhenStarted", testNextPutWhenStarted),
        ("testNextPutWhenStopped", testNextPutWhenStopped),
        ("testShouldFlushWhenEmpty", testShouldFlushWhenEmpty),
        ("testShouldFlushWhenNotEmpty", testShouldFlushWhenNotEmpty),
        ("testStart", testStart),
        ("testStop", testStop),
    ]
}

extension JRPCLoggerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JRPCLoggerTests = [
        ("testFlush", testFlush),
        ("testInit", testInit),
        ("testNextPut", testNextPut),
        ("testStart", testStart),
        ("testStop", testStop),
    ]
}

extension MemoryLoggerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MemoryLoggerTests = [
        ("testClear", testClear),
        ("testLimit", testLimit),
        ("testNextPut", testNextPut),
    ]
}

extension SignalLoggerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SignalLoggerTests = [
        ("testFilter", testFilter),
        ("testInit", testInit),
        ("testInitAndStart", testInitAndStart),
        ("testMultipleBeaconSubscription", testMultipleBeaconSubscription),
        ("testMultipleSubscriptionsToSameBeacon", testMultipleSubscriptionsToSameBeacon),
        ("testMultipleSubscriptionsToSameBeaconWithDifferentFilters", testMultipleSubscriptionsToSameBeaconWithDifferentFilters),
        ("testRunDuring", testRunDuring),
        ("testRunForSignals", testRunForSignals),
        ("testStart", testStart),
        ("testStartOnBeacon", testStartOnBeacon),
        ("testStartStop", testStartStop),
        ("testStop", testStop),
        ("testStopAll", testStopAll),
    ]
}

extension SignalStringEncoderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SignalStringEncoderTests = [
        ("testEncode", testEncode),
    ]
}

extension SignalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SignalTests = [
        ("testEmitContextSignal", testEmitContextSignal),
        ("testEmitLargeScaling", testEmitLargeScaling),
        ("testEmitPerformance", testEmitPerformance),
        ("testEmitSmallScaling", testEmitSmallScaling),
        ("testEmitStringSignal", testEmitStringSignal),
        ("testErrorSignal", testErrorSignal),
        ("testOptionalErrorSignal", testOptionalErrorSignal),
        ("testWrapperSignal", testWrapperSignal),
    ]
}

extension StreamLoggerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StreamLoggerTests = [
        ("testNextPut", testNextPut),
        ("testThreadSafety", testThreadSafety),
    ]
}

extension StringSignalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringSignalTests = [
        ("testEmitStringOnly", testEmitStringOnly),
        ("testEmitStringWithUserInfo", testEmitStringWithUserInfo),
    ]
}

extension WrapperSignalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WrapperSignalTests = [
        ("testJSONEncoding", testJSONEncoding),
        ("testWrappingBool", testWrappingBool),
        ("testWrappingInt", testWrappingInt),
        ("testWrappingNSObject", testWrappingNSObject),
        ("testWrappingString", testWrappingString),
        ("testWrappingSwiftClassValue", testWrappingSwiftClassValue),
        ("testWrappingWithUserInfo", testWrappingWithUserInfo),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BeaconTest.__allTests__BeaconTest),
        testCase(IntervalLoggerTests.__allTests__IntervalLoggerTests),
        testCase(JRPCLoggerTests.__allTests__JRPCLoggerTests),
        testCase(MemoryLoggerTests.__allTests__MemoryLoggerTests),
        testCase(SignalLoggerTests.__allTests__SignalLoggerTests),
        testCase(SignalStringEncoderTests.__allTests__SignalStringEncoderTests),
        testCase(SignalTests.__allTests__SignalTests),
        testCase(StreamLoggerTests.__allTests__StreamLoggerTests),
        testCase(StringSignalTests.__allTests__StringSignalTests),
        testCase(WrapperSignalTests.__allTests__WrapperSignalTests),
    ]
}
#endif
